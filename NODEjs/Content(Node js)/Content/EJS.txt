Use EJS as Template Engine in Node.js

EJS: EJS or Embedded Javascript Templating is a templating engine used by Node.js. Template engine helps to 
create an HTML template with minimal code. Also, it can inject data into HTML template at the client side and produce the 
final HTML. EJS is a simple templating language which is used to generate HTML markup with plain JavaScript. 
It also helps to embed JavaScript to HTML pages. 
To begin with, using EJS as templating engine we need to install

npm install ejs --save

Note: npm in the above commands stands for the node package manager, a place where install all the dependencies. 
–save flag is no longer needed after Node 5.0.0 version, as all the modules that we now install will be added to dependencies.
Now, the first thing we need to do is to set EJS as our templating engine with Express which is a 
Node.js web application server framework, which is specifically designed for building single-page, multi-page, 
and hybrid web applications. It has become the standard server framework for node.js.

Index Js code

// Set express as Node.js web application 
// server framework. 
// To install express before using it as 
// an application server by using  
// "npm install express" command. 
var express = require('express'); 
var app = express(); 
  
// Set EJS as templating engine 
app.set('view engine', 'ejs'); 

app.get('/', (req, res)=>{ 

// The render method takes the name of the html 
// page to be rendered as input. 
// This page should be in views folder  
// in the root directory 
var data = {name:'Raj', 
    hobbies:['playing football', 'playing chess', 'cycling']} 
  
res.render('home', {data:data}); 
});  

var server = app.listen(4000, function(){ 
    console.log('listining to port 4000') 
});

home.ejs

<!DOCTYPE html> 
<html> 
  
<head> 
    <title>Home Page</title> 
      
    <style type="text/css" media="screen"> 
        body { 
            background-color: skyblue; 
            text-decoration-color: white; 
            font-size:7em;  
        } 
    </style> 
</head> 
  
<body> 
    Hobbies of <%=data.name%> are:<br/> 
      
    <ul> 
        <% data.hobbies.forEach((item)=>{%> 
        <li><%=item%></li>  
        <%});%> 
    </ul>  
</body> 
  
</html>

Node.js Server Side Rendering (SSR) using EJS

Server-side rendering (SSR) is a popular technique for rendering a normally client-side only single page app (SPA) 
on the server and then sending a fully rendered page to the client. The client’s JavaScript bundle can then take over and the SPA can operate as normal.

SSR technique is helpful in situations like the client has a slow internet connection and then rendering of the whole 
page on client-side takes too much time in certain situations Server Side Rendering might come as handy. One of the widely 
used modules used to do Server Side Rendering in Node.js is EJS Module. EJS stands for Embedded JavaScript template. 

Feature of EJS Module:

Use plain javascript.
Fast Development time.
Simple syntax.
Faster execution.
Easy Debugging.
Active Development.

Installation of request module:

First of all install express js and ejs using npm install. You also can visit this link to know more about EJS.
npm install ejs
The require() method is used to load and cache JavaScript modules.
const ejs = require('ejs');
Next step is to create a folder and add a file name app.js and a file named index.ejs. Be careful, 
about syntax of index file, here it is ejs which denotes it is an ejs file. To run this file You need the following command.    